
==================== FINAL INTERFACE ====================
2017-02-12 01:33:49.219619 UTC

interface neural-algorithms-0.1.0.0-G4cKiu8m1A6JbAFI6F3DlP:CCEA.CCEA 8001
  interface hash: 204a6f8edb771833eb9b61faeb683fbd
  ABI hash: ebea0787c2a76f33c0363c10a0314276
  export-list hash: 77667ec3fa217e305f0ae05ab3221e94
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: db84b2549858666a400c84cb900ff8fa
  sig of: Nothing
  used TH splices: False
  where
exports:
  CCEA.CCEA.createPopulation
  CCEA.CCEA.evolveCCEA
  CCEA.CCEA.evolveNCCEA
  CCEA.CCEA.liftStateless
  CCEA.CCEA.CCEA{CCEA.CCEA.CCEA _breed _fit _pop _sel _state}
  CCEA.CCEA.CCEAVars
  CCEA.CCEA.Population
module dependencies: CCEA.EA Matrix.Traversable NN.NeuralNetwork
                     RandomUtil.Random Util.MyList Util.Tuples Util.Vars
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ
                      hnn-0.3@hnn-0.3-FFj4by4N6nNKK66rtK9l9v integer-gmp-1.0.0.1
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-9fVrEibWMFm8DwR7HO0MWX
                      normaldistribution-1.1.0.3@normaldistribution-1.1.0.3-5Tmsx8i18mO3UhoQolUXZE
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.CG
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Element
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Util
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Vector
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Numeric.Matrix
         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Numeric.Vector
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Devel
                         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Matrix
                         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Modular
                         hmatrix-0.17.0.2@hmatrix-0.17.0.2-IdOSLSyc4bNBeSHtVcVJxZ:Internal.Numeric
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-9fVrEibWMFm8DwR7HO0MWX:System.Random.MWC
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.OldList 0058409f994fb13ae0616e3f1e5b4dae
import  -/  base-4.9.0.0:Data.Traversable 7ce5b7ee67475ac3d03ae825b86efd9f
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  CCEA.EA 42ab5abb2c54c89519e5419f580f2584
  exports: 34832b985ee07e617d1837c2d18a2f19
  BreedingStrategy 83384c2d3c26f6568772c92ff85938f8
  FitnessFunction 1c31628c0bfb28c9135306aabd01492d
  SelectionStrategy 7ab12a597c70731a0c2b9245e4bbb7d2
import  -/  NN.NeuralNetwork a7e929c67c58528fd2ec928049b637dc
  exports: 3dbcf85690c4c5036042d02a36607d18
  NN c79f29a410ebe4ea871978a29f7af3e8
  NNVars 07ca56f009118a64b94279955a6f4876
  create 8e67ed3e08386ffbe8baf3aa720aa5ad
import  -/  Util.Vars ae34b4bc4b0c13f5e1a6e94379df191d
  exports: 6c44af7536618ed06fd600cf48747aa2
  Vars cf8e2f79b65eb1da7e48dba3e62c269d
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 33fad628288f84aac16d40e5a027af06
e0ac9331b9e938523d5a1e58789e0308
  $tc'CCEA :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14910413295889076138##
                   16522158753605042884##
                   CCEA.CCEA.$trModule
                   CCEA.CCEA.$tc'CCEA1) -}
6fe926453c1adfd13971772af5d40591
  $tc'CCEA1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CCEA"#) -}
d9edaf80de972db869f41382765ad094
  $tcCCEA :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15632026190232122618##
                   9767202439045448116##
                   CCEA.CCEA.$trModule
                   CCEA.CCEA.$tcCCEA1) -}
b40ce23c41eeeccbf257af305d0da57a
  $tcCCEA1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CCEA"#) -}
4b89f6f4e11828d6cf831fca2255b778
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   CCEA.CCEA.$trModule2
                   CCEA.CCEA.$trModule1) -}
c5f2299e00bfd4f5ea4ac8e46b7e01c7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CCEA.CCEA"#) -}
afffc6088483798c0258ba99db62577e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "neural-algorithms-0.1.0.0-G4cKiu8m1A6JbAFI6F3DlP"#) -}
81c4342bb3aa9faa94176f60c832c051
  $wevolveCCEA ::
    g
    -> CCEA.CCEA.Population n
    -> CCEA.CCEA.CCEAFitnessFunction n s
    -> CCEA.EA.BreedingStrategy n g
    -> CCEA.EA.SelectionStrategy n g
    -> s
    -> (# g, CCEA.CCEA.CCEA n s g #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,1*U><L,U><L,U><L,U><L,U>, Inline: [0] -}
b6b1947f3a14f83e5045ac96aa6e21c4
  $wevolveNCCEA ::
    GHC.Prim.Int#
    -> g -> CCEA.CCEA.CCEA n s g -> (# g, CCEA.CCEA.CCEA n s g #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U(U,U,U,U,U)>, Inline: [0] -}
48216b643b26f20f2469b15b9d71f231
  data CCEA n s g
    = CCEA {_pop :: CCEA.CCEA.Population n,
            _fit :: CCEA.CCEA.CCEAFitnessFunction n s,
            _breed :: CCEA.EA.BreedingStrategy n g,
            _sel :: CCEA.EA.SelectionStrategy n g,
            _state :: s}
30402ace5a77eaaf4e57d68ce8ad68f2
  type CCEAFitnessFunction n s = s -> [n] -> (s, [GHC.Types.Double])
0dddf2443b6fa0297ab1df74724be843
  type CCEAVars = Util.Vars.Vars
91f15d072452c273b915c8dc153c6b2f
  type Population n = [[n]]
ad0112c334ec070c6c4983f09d8b9d67
  _breed :: CCEA.CCEA.CCEA n s g -> CCEA.EA.BreedingStrategy n g
  RecSel Left CCEA.CCEA.CCEA
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ n @ s @ g (ds :: CCEA.CCEA.CCEA n s g) ->
                 case ds of wild { CCEA.CCEA.CCEA ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
57bdb8e985ef5b8072872cf7894b506b
  _fit :: CCEA.CCEA.CCEA n s g -> CCEA.CCEA.CCEAFitnessFunction n s
  RecSel Left CCEA.CCEA.CCEA
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ n @ s @ g (ds :: CCEA.CCEA.CCEA n s g) ->
                 case ds of wild { CCEA.CCEA.CCEA ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
b78ac5462c296da3379e0e661248908c
  _pop :: CCEA.CCEA.CCEA n s g -> CCEA.CCEA.Population n
  RecSel Left CCEA.CCEA.CCEA
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ n @ s @ g (ds :: CCEA.CCEA.CCEA n s g) ->
                 case ds of wild { CCEA.CCEA.CCEA ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
a278136f09f89db8bbeb6c5af84d922e
  _sel :: CCEA.CCEA.CCEA n s g -> CCEA.EA.SelectionStrategy n g
  RecSel Left CCEA.CCEA.CCEA
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ n @ s @ g (ds :: CCEA.CCEA.CCEA n s g) ->
                 case ds of wild { CCEA.CCEA.CCEA ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
2b8131faa29776b4c2d575293ba56341
  _state :: CCEA.CCEA.CCEA n s g -> s
  RecSel Left CCEA.CCEA.CCEA
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ n @ s @ g (ds :: CCEA.CCEA.CCEA n s g) ->
                 case ds of wild { CCEA.CCEA.CCEA ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
74978df04debdda97bd4379b273f3ff7
  createPopulation ::
    NN.NeuralNetwork.NN n =>
    GHC.Types.Int
    -> GHC.Types.Int
    -> NN.NeuralNetwork.NNVars
    -> GHC.Types.IO (CCEA.CCEA.Population n)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U(U)><L,U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                CCEA.CCEA.createPopulation1
                  `cast`
                (forall (n :: <*>_N).
                 <NN.NeuralNetwork.NN n>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <NN.NeuralNetwork.NNVars>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[[n]]>_R)) -}
cd3ba1fd38d1f08558beeef1218500f7
  createPopulation1 ::
    NN.NeuralNetwork.NN n =>
    GHC.Types.Int
    -> GHC.Types.Int
    -> NN.NeuralNetwork.NNVars
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[n]] #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(C(U),A,A,A,A,A)><L,1*U(U)><L,U(U)><L,U>,
     Unfolding: (\ @ n
                   ($dNN :: NN.NeuralNetwork.NN n)
                   (numPools :: GHC.Types.Int)
                   (poolSize :: GHC.Types.Int)
                   (vars :: NN.NeuralNetwork.NNVars)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case numPools of wild1 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># 1# y) of wild {
                   GHC.Types.False
                   -> let {
                        lvl :: [GHC.Types.IO n]
                        = case poolSize of wild2 { GHC.Types.I# y1 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># 1# y1) of wild3 {
                            GHC.Types.False
                            -> let {
                                 lvl1 :: GHC.Types.IO n = NN.NeuralNetwork.create @ n $dNN vars
                               } in
                               letrec {
                                 go1 :: GHC.Prim.Int# -> [GHC.Types.IO n]
                                   {- Arity: 1, Strictness: <L,U> -}
                                 = \ (x :: GHC.Prim.Int#) ->
                                   GHC.Types.:
                                     @ (GHC.Types.IO n)
                                     lvl1
                                     (case GHC.Prim.tagToEnum#
                                             @ GHC.Types.Bool
                                             (GHC.Prim.==# x y1) of wild4 {
                                        GHC.Types.False -> go1 (GHC.Prim.+# x 1#)
                                        GHC.Types.True -> GHC.Types.[] @ (GHC.Types.IO n) })
                               } in
                               go1 1#
                            GHC.Types.True -> GHC.Types.[] @ (GHC.Types.IO n) } }
                      } in
                      let {
                        lvl1 :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, [n] #)
                          {- Arity: 1 -}
                        = CCEA.CCEA.createPopulation3 @ n lvl
                      } in
                      letrec {
                        go1 :: GHC.Prim.Int# -> [GHC.Types.IO [n]]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          GHC.Types.:
                            @ (GHC.Types.IO [n])
                            lvl1 `cast` (Sym (GHC.Types.N:IO[0] <[n]>_R))
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x y) of wild2 {
                               GHC.Types.False -> go1 (GHC.Prim.+# x 1#)
                               GHC.Types.True -> GHC.Types.[] @ (GHC.Types.IO [n]) })
                      } in
                      CCEA.CCEA.createPopulation2 @ n (go1 1#) eta
                   GHC.Types.True
                   -> CCEA.CCEA.createPopulation2
                        @ n
                        (GHC.Types.[] @ (GHC.Types.IO [n]))
                        eta } }) -}
8dec753fd3fa17faf8355746424645c2
  createPopulation2 ::
    [GHC.Types.IO [n]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[n]] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
db30cb98f0e7b06badebf21c4825492b
  createPopulation3 ::
    [GHC.Types.IO n]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [n] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
d184a400dfd379d0246af40e122308d7
  evolveCCEA ::
    g -> CCEA.CCEA.CCEA n s g -> (g, CCEA.CCEA.CCEA n s g)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U(1*U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ g @ n @ s (w :: g) (w1 :: CCEA.CCEA.CCEA n s g) ->
                 case w1 of ww { CCEA.CCEA.CCEA ww1 ww2 ww3 ww4 ww5 ->
                 case CCEA.CCEA.$wevolveCCEA
                        @ g
                        @ n
                        @ s
                        w
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5 of ww6 { (#,#) ww7 ww8 ->
                 (ww7, ww8) } }) -}
82862b191a3fa18f225f0b739395e88c
  evolveNCCEA ::
    System.Random.RandomGen g =>
    GHC.Types.Int
    -> g -> CCEA.CCEA.CCEA n s g -> (g, CCEA.CCEA.CCEA n s g)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(1*U)><L,U><L,U(U,U,U,U,U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ g
                   @ n
                   @ s
                   (w :: System.Random.RandomGen g)
                   (w1 :: GHC.Types.Int)
                   (w2 :: g)
                   (w3 :: CCEA.CCEA.CCEA n s g) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case CCEA.CCEA.$wevolveNCCEA
                        @ g
                        @ n
                        @ s
                        ww1
                        w2
                        w3 of ww2 { (#,#) ww3 ww4 ->
                 (ww3, ww4) } }) -}
9d9b6badc65b8c73ec3af01468e3463c
  liftStateless ::
    CCEA.EA.FitnessFunction n -> CCEA.CCEA.CCEAFitnessFunction n ()
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,A><L,1*U>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ n (f :: CCEA.EA.FitnessFunction n) (ds :: ()) (xs :: [n]) ->
                 (GHC.Tuple.(),
                  GHC.Base.build
                    @ GHC.Types.Double
                    (\ @ b1
                       (c :: GHC.Types.Double -> b1 -> b1)[OneShot]
                       (n1 :: b1)[OneShot] ->
                     GHC.Base.foldr
                       @ n
                       @ b1
                       (GHC.Base.mapFB @ GHC.Types.Double @ b1 @ n c f)
                       n1
                       xs))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

